name: C/C++ CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies 
      run: sudo apt-get update && sudo apt install -y libncurses5-dev libncursesw5-dev pkg-config check unzip
    - name: reconf
      run: autoreconf -iv
    - name: Configure with Coverage
      run: ./configure --enable-coverage
    - name: Configure Sonar
      run: |
        wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
        unzip build-wrapper-linux-x86.zip
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip
        unzip sonar-scanner-cli-4.4.0.2170-linux.zip
    - name: Run Tests
      run: |
        ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output make clean
        ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output make check
        for source_file in $(find src -name '*.c')
        do
            echo $source_file
            cd $(dirname $source_file)
            gcov $(basename $source_file)
            cd -
        done
    - name: Run Sonar
      run: |
        ./sonar-scanner-4.4.0.2170-linux/bin/sonar-scanner -Dsonar.organization=vepo-github \
                                                           -Dsonar.projectKey=csv-viewer \
                                                           -Dsonar.sources=src \
                                                           -Dsonar.host.url=https://sonarcloud.io \
                                                           -Dsonar.cfamily.build-wrapper-output=bw-output \
                                                           -Dsonar.branch.name=${BASE_BRANCH} \
                                                           -Dsonar.login=${SONAR_TOKEN} \
                                                           -Dsonar.cfamily.gcov.reportsPath=src \
                                                           -Dsonar.exclusions=tests/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        BASE_BRANCH: ${{ github.base_ref }}
    - name: Configure
      run: ./configure
    - name: Clean & Make
      run: |
        make clean
        make
    - name: make check
      run: make check
    - name: make dist
      run: make dist
    - name: Rename artifact
      run: cp csv-viewer-*.tar.gz csv-viewer-dist.tar.gz
    - uses: actions/upload-artifact@v1
      with:
        name: csv-viewer
        path: csv-viewer-dist.tar.gz
  create-installer:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies 
        run: sudo apt-get update && sudo apt install -y libncurses5-dev libncursesw5-dev pkg-config check unzip
      - run: bash build-installer
      - uses: actions/upload-artifact@v2
        with:
          name: get-csvi
          path: installer


